{
    "version": "https://jsonfeed.org/version/1",
    "title": "Pace Makers • All posts by \"technology\" category",
    "description": "",
    "home_page_url": "https://pace-makers.github.io",
    "items": [
        {
            "id": "https://pace-makers.github.io/2021/05/26/create-bot-for-discord-server/",
            "url": "https://pace-makers.github.io/2021/05/26/create-bot-for-discord-server/",
            "title": "Create Bot for You Discord Server",
            "date_published": "2021-05-26T08:32:17.000Z",
            "content_html": "<p><img src=\"/2021/05/26/create-bot-for-discord-server/0.png\" alt=\"THUMBNAIL HERE\"></p>\n<h4 id=\"What-we-need-for-this-tutorial\"><a href=\"#What-we-need-for-this-tutorial\" class=\"headerlink\" title=\"What we need for this tutorial\"></a>What we need for this tutorial</h4><ul>\n<li>NodeJs and NPM installed</li>\n<li>discord.js</li>\n<li>dotenv</li>\n</ul>\n<h4 id=\"Setting-up-project\"><a href=\"#Setting-up-project\" class=\"headerlink\" title=\"Setting up project\"></a>Setting up project</h4><p>Create a folder named <code>discord_bot</code> and initialize a node project in that folder with <code>npm init -y</code> command. Now Let’s install some packages by typing this command <code>npm i discord.js dotenv</code>.</p>\n<p><img src=\"/2021/05/26/create-bot-for-discord-server/1.png\" alt=\"THUMBNAIL HERE\"></p>\n<p>Let’s create a file named <code>.env</code>. This file will contain our Environment variables like <code>TOKEN</code> and <code>PREFIX</code> for our bot.</p>\n<p>Let’s get our token for our discord bot. Go to <a href=\"https://discord.com/developers/applications\"><strong>Discord Developer Portal</strong></a> and Sign up if you haven’t already. Now open Applications tab and Click on <code>New Application</code>. Type a name and press <code>Create</code>.</p>\n<p><img src=\"/2021/05/26/create-bot-for-discord-server/2.png\" alt=\"THUMBNAIL HERE\"></p>\n<p>Now that you have created a application, Set it up by typing name and giving it a Profile Picture.</p>\n<p>Click on the <code>Bot</code> tab, and Copy the Token.<br><img src=\"/2021/05/26/create-bot-for-discord-server/3.png\" alt=\"THUMBNAIL HERE\"></p>\n<p>Paste it in your <code>.env</code> file. Your file should look like this</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TOKEN=PASTE YOUR TOKEN HERE</span><br><span class=\"line\">PREFIX=!</span><br></pre></td></tr></table></figure>\n\n<p>Let’s invite our bot to our server by going to <code>OAuth2</code> tab and giving it scope of <code>bot</code> and permission of <code>Administrator</code>, Copy the url and paste it in your Browser, Now select your server and Press <code>Continue</code>.</p>\n<p><img src=\"/2021/05/26/create-bot-for-discord-server/4.png\" alt=\"THUMBNAIL HERE\"></p>\n<p>Now we are setup to create our Discord bot.</p>\n<h4 id=\"Logging-in-to-our-bot\"><a href=\"#Logging-in-to-our-bot\" class=\"headerlink\" title=\"Logging in to our bot\"></a>Logging in to our bot</h4><p>Create <code>index.js</code> file inside your project and start typing your code.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">require(&quot;dotenv&quot;).config(); // Telling Nodejs, We are using dotenv to get environment variables</span><br><span class=\"line\">const discord = require(&quot;discord.js&quot;); // Importing discord.js library</span><br><span class=\"line\">const client = new discord.Client(); // Creating a client for our bot</span><br><span class=\"line\">const fs = require(&quot;fs&quot;); // We are gonna need filesystem module for later.</span><br><span class=\"line\"></span><br><span class=\"line\">// Your CODE WILL GO HERE</span><br><span class=\"line\"></span><br><span class=\"line\">client.login(process.env.TOKEN); // Login into your discord bot you created by this method and passing it the token</span><br></pre></td></tr></table></figure>\n\n<p>Let’s listen to the <code>ready</code> event (it fires when our bot is ready to use).</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">require(&quot;dotenv&quot;).config(); // Telling Nodejs, We are using dotenv to get environment variables</span><br><span class=\"line\">const discord = require(&quot;discord.js&quot;); // Importing discord.js library</span><br><span class=\"line\">const client = new discord.Client(); // Creating a client for our bot</span><br><span class=\"line\">const fs = require(&quot;fs&quot;); // We are gonna need filesystem module for later.</span><br><span class=\"line\"></span><br><span class=\"line\">client.on(&#x27;ready&#x27;, () =&gt; &#123;</span><br><span class=\"line\">    console.log(&quot;Hello World!&quot;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">client.login(process.env.TOKEN); // Login into your discord bot you created by this method and passing it the token</span><br></pre></td></tr></table></figure>\n\n<p>Now if you run your bot by typing <code>nodemon index</code> in your powershell. You will see <code>Hello World!</code> logged into your terminal.</p>\n<p><img src=\"/2021/05/26/create-bot-for-discord-server/5.png\" alt=\"THUMBNAIL HERE\"></p>\n<h4 id=\"Creating-commands\"><a href=\"#Creating-commands\" class=\"headerlink\" title=\"Creating commands\"></a>Creating commands</h4><p>To create commands, create directory named <code>commands</code> in your project. Let’s create a basic command <code>ping</code> for our bot.<br>Create file named <code>ping</code> in our <code>commands</code> directory.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Importing Message data type from `discord.js`</span><br><span class=\"line\">const &#123; Message &#125; = require(&quot;discord.js&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">/* </span><br><span class=\"line\">    Exporting a object with name, description and execute properties.</span><br><span class=\"line\">    1. name - this will be the name of the commands and used to call the commands</span><br><span class=\"line\">    2. description - This will be helpful for getting help message.</span><br><span class=\"line\">    3. execute - This will contain the function of the command. message and args will be passed to it.</span><br><span class=\"line\">*/</span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">    name: &quot;ping&quot;,</span><br><span class=\"line\">    description: &quot;Gets the ping of the Bot.&quot;,</span><br><span class=\"line\">    execute: (message, args) =&gt; &#123;</span><br><span class=\"line\">        // Creating a new message</span><br><span class=\"line\">        const msg = new Message();</span><br><span class=\"line\">        // Setting content of the message to &#x27;Pong!&#x27;</span><br><span class=\"line\">        msg.content = &quot;Pong!&quot;;</span><br><span class=\"line\">        // Sending the message to the current channel</span><br><span class=\"line\">        message.channel.send(msg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>You can add more commands as you desire, like this.</p>\n<h4 id=\"Executing-commands\"><a href=\"#Executing-commands\" class=\"headerlink\" title=\"Executing commands\"></a>Executing commands</h4><p>We are gonna listen for messages on any channel of the server and see that message is starting with our <code>PREFIX</code> we used in our <code>.env</code> file. For this we are gonna listen for <code>message</code> event (This event fires whenever there is a new message).</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">require(&quot;dotenv&quot;).config(); // Telling Nodejs, We are using dotenv to get environment variables</span><br><span class=\"line\">const discord = require(&quot;discord.js&quot;); // Importing discord.js library</span><br><span class=\"line\">const client = new discord.Client(); // Creating a client for our bot</span><br><span class=\"line\">const fs = require(&quot;fs&quot;); // We are gonna need filesystem module for later.</span><br><span class=\"line\"></span><br><span class=\"line\">client.on(&#x27;ready&#x27;, () =&gt; &#123;</span><br><span class=\"line\">    console.log(&quot;Hello World!&quot;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">client.on(&quot;message&quot;, (message) =&gt; &#123;</span><br><span class=\"line\">    // If message doesn&#x27;t start with our prefix and author of that message is a bot, we are gonna break the execution any further</span><br><span class=\"line\">\tif (!message.content.startsWith(process.env.PREFIX) || message.author.bot)</span><br><span class=\"line\">\t\treturn; </span><br><span class=\"line\">\t\t</span><br><span class=\"line\">    // Removing prefix, Getting command and arguments </span><br><span class=\"line\">\tconst args = message.content.slice(process.env.PREFIX.length).split(/ +/); </span><br><span class=\"line\">\tconst command = args.shift().toLowerCase(); // Getting command name.</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">client.login(process.env.TOKEN); // Login into your discord bot you created by this method and passing it the token</span><br></pre></td></tr></table></figure>\n\n<p>Now we have our command and arguments that were called with message. We can create commands.<br>To Do this, First we’re gonna make some changes to our <code>ready</code> event listener.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">client.on(&quot;ready&quot;, () =&gt; &#123;</span><br><span class=\"line\">\tconsole.log(&quot;Hello World!&quot;);</span><br><span class=\"line\">\t// Creating new Collection Datatype from discord.js(You can learn about it from the documentation of discord.js)</span><br><span class=\"line\">\tclient.commands = new discord.Collection(); </span><br><span class=\"line\"></span><br><span class=\"line\">    // Getting all file names with extension of `.js` in the `commands` directory</span><br><span class=\"line\">\tconst commandFiles = fs</span><br><span class=\"line\">\t\t.readdirSync(&quot;./commands/&quot;)</span><br><span class=\"line\">\t\t.filter((file) =&gt; file.endsWith(&quot;.js&quot;)); </span><br><span class=\"line\">\t\t</span><br><span class=\"line\">    // Looping through the file and getting all the commands from it and setting it by name and command.</span><br><span class=\"line\">\tfor (const file of commandFiles) &#123;</span><br><span class=\"line\">\t\tconst command = require(`./commands/$&#123;file&#125;`);</span><br><span class=\"line\">\t\tclient.commands.set(command.name, command);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>Now changing our <code>message</code> event to execute the command.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">client.on(&quot;message&quot;, (message) =&gt; &#123;</span><br><span class=\"line\">\tif (!message.content.startsWith(process.env.PREFIX) || message.author.bot)</span><br><span class=\"line\">\t\treturn;</span><br><span class=\"line\"></span><br><span class=\"line\">\tconst args = message.content.slice(process.env.PREFIX.length).split(/ +/);</span><br><span class=\"line\">\tconst command = args.shift().toLowerCase();</span><br><span class=\"line\"></span><br><span class=\"line\">    // Checking if command exist it, if it does, calling execute function. Else sending error message to the channel where the command was called from.</span><br><span class=\"line\">\tif (client.commands.has(command)) &#123;</span><br><span class=\"line\">\t\tclient.commands.get(command).execute(message, args);</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">\t\tmessage.channel.send(</span><br><span class=\"line\">\t\t\t`No command named **$&#123;command&#125;** is found. Type **help** for all commands.`</span><br><span class=\"line\">\t\t);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>If you send a message to the server, It will result in command being executed.<br><img src=\"/2021/05/26/create-bot-for-discord-server/6.png\" alt=\"THUMBNAIL HERE\"></p>\n<h4 id=\"Creating-help-command\"><a href=\"#Creating-help-command\" class=\"headerlink\" title=\"Creating help command\"></a>Creating help command</h4><p>To create help command, create a file named <code>help.js</code> in the <code>commands</code> directory.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Importing Message embed data type</span><br><span class=\"line\">const &#123; MessageEmbed &#125; = require(&quot;discord.js&quot;);</span><br><span class=\"line\">// Importing Filesystem module</span><br><span class=\"line\">const fs = require(&quot;fs&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">\tname: &quot;help&quot;,</span><br><span class=\"line\">\tdescription: &quot;Help command gives you the information about the commands&quot;,</span><br><span class=\"line\">\texecute: function (message, args) &#123;</span><br><span class=\"line\">\t    // Instantiating new MessageEmbed</span><br><span class=\"line\">\t\tconst embed = new MessageEmbed();</span><br><span class=\"line\">\t\t// Setting title and description of the embed</span><br><span class=\"line\">\t\tembed.setTitle(&quot;Help&quot;);</span><br><span class=\"line\">\t\tembed.setDescription(&quot;Type help &lt;command&gt; to get help for the command&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">        // If no command specified after !help then execute this.</span><br><span class=\"line\">\t\tif (args.length &lt; 1) &#123;</span><br><span class=\"line\">\t\t    // Reading all the commands</span><br><span class=\"line\">\t\t\tconst commandFiles = fs</span><br><span class=\"line\">\t\t\t\t.readdirSync(&quot;./commands/&quot;)</span><br><span class=\"line\">\t\t\t\t.filter((file) =&gt; file.endsWith(&quot;.js&quot;));</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tfor (const file of commandFiles) &#123;</span><br><span class=\"line\">\t\t\t\tconst command = require(`./$&#123;file&#125;`);</span><br><span class=\"line\">                // Adding to the embed command name and its description</span><br><span class=\"line\">\t\t\t\tembed.addField(command.name, command.description, true);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\tconst command = require(`./$&#123;args[0]&#125;.js`);</span><br><span class=\"line\">\t\t\tif (!command) &#123;</span><br><span class=\"line\">\t\t\t\treturn message.channel.send(&quot;No command found&quot;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tembed.addField(command.name, command.description, true);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t// Sending the embed to the channel.</span><br><span class=\"line\">\t\tmessage.channel.send(embed);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>Now if you type <code>!help</code> or <code>!help command</code> then it will be executed.<br><img src=\"/2021/05/26/create-bot-for-discord-server/7.png\" alt=\"THUMBNAIL HERE\"></p>\n<p>To run this bot 24/7, You need to host it on a hosting provider like <code>heroku</code>, <code>Digital Ocean</code> or <code>Google Cloud</code>.</p>\n<p><a href=\"https://github.com/programmer101n/pacemakers-bot\">Link to the Project</a></p>\n<p><a href=\"https://wlo.link/@prgmaz\">Follow me on my socials.</a></p>\n",
            "tags": [
                "nodejs",
                "javascript",
                "discord",
                "bot",
                "commands"
            ]
        },
        {
            "id": "https://pace-makers.github.io/2021/05/21/How-to-start-mining-Bitcoin/",
            "url": "https://pace-makers.github.io/2021/05/21/How-to-start-mining-Bitcoin/",
            "title": "How to Start Mining Bitcoin",
            "date_published": "2021-05-21T14:47:24.000Z",
            "content_html": "<p><img src=\"/2021/05/21/How-to-start-mining-Bitcoin/bitcoin-mining.jpg\"></p>\n<h4 id=\"What-we-need-for-this-tutorial\"><a href=\"#What-we-need-for-this-tutorial\" class=\"headerlink\" title=\"What we need for this tutorial\"></a>What we need for this tutorial</h4><ul>\n<li>Powerful Graphic card (GPU) Nvidia or AMD</li>\n<li>Bitcoin wallet</li>\n<li>Bitcoin Mining Software (Miner)</li>\n<li>Internet connection</li>\n</ul>\n<h4 id=\"Setting-up-things\"><a href=\"#Setting-up-things\" class=\"headerlink\" title=\"Setting up things\"></a>Setting up things</h4><p>We will use here <code>Nicehash wallet</code> and <code>Nicehash Miner</code> here, because it is easy to use to setup.<br>First we will setup <code>Nicehash wallet</code>.</p>\n<h4 id=\"How-to-setup-Nicehash-wallet\"><a href=\"#How-to-setup-Nicehash-wallet\" class=\"headerlink\" title=\"How to setup Nicehash wallet\"></a>How to setup Nicehash wallet</h4><ul>\n<li><p>Go to <a href=\"https://www.nicehash.com/my/register\">https://www.nicehash.com/my/register</a></p>\n<p><img src=\"/2021/05/21/How-to-start-mining-Bitcoin/account.png\"></p>\n</li>\n<li><p>Enter your details and Create a new account</p>\n</li>\n<li><p>Verify your <code>Email Address</code></p>\n</li>\n<li><p>Now your account is sucessfully created</p>\n</li>\n<li><p>Login to your account</p>\n</li>\n<li><p>after first login it will show <code>select services</code></p>\n<p><img src=\"/2021/05/21/How-to-start-mining-Bitcoin/services.png\"></p>\n</li>\n<li><p>select the <code>Cryptocurrency wallet</code> , <code>cryptocurrency mining</code> &amp; <code>cryptocurrency exchange</code></p>\n</li>\n<li><p>Your wallet is Ready to use</p>\n</li>\n</ul>\n<p>Time to setup miner</p>\n<h4 id=\"How-to-setup-Nicehash-miner\"><a href=\"#How-to-setup-Nicehash-miner\" class=\"headerlink\" title=\"How to setup Nicehash miner\"></a>How to setup Nicehash miner</h4><ul>\n<li><p>Go to <a href=\"https://www.nicehash.com/download-center\">https://www.nicehash.com/download-center</a></p>\n</li>\n<li><p>Now click on download in front of <code>Nicehash miner</code></p>\n<p><img src=\"/2021/05/21/How-to-start-mining-Bitcoin/Download.png\"></p>\n</li>\n<li><p>it will take you to another website of github</p>\n</li>\n<li><p>click on Download <code>nicehash miner installer</code></p>\n<p><img src=\"/2021/05/21/How-to-start-mining-Bitcoin/github.png\"></p>\n</li>\n<li><p>After Downloading Nicehash miner <code>install</code> it.</p>\n</li>\n</ul>\n<ul>\n<li><p>After installing Open the Nicehash miner and <code>Login</code> with your account</p>\n</li>\n<li><p>Now it will download some file let it download all of them</p>\n<p><img src=\"/2021/05/21/How-to-start-mining-Bitcoin/files.png\"></p>\n</li>\n<li><p>After this it will show some option to accept <code>accept all the option</code> and restart your Nicehash miner</p>\n</li>\n<li><p>Now click on <code>Start Mining</code> it will take few minutes to test (For the first time only)</p>\n<p><img src=\"/2021/05/21/How-to-start-mining-Bitcoin/start.png\"></p>\n</li>\n<li><p>We are successfully started mining bitcoin</p>\n</li>\n</ul>\n<p><img src=\"/2021/05/21/How-to-start-mining-Bitcoin/mining.png\"></p>\n<p>For more information about wallet and withdraw you can visit <code>Nicehash website</code> or <code>Comment here</code><br>or You can ask me about it on <code>instagram</code> : <a href=\"https://www.instagram.com/hardc0d3d/\">https://www.instagram.com/hardc0d3d/</a></p>\n",
            "tags": [
                "bitcoin",
                "bitcoinmining",
                "cryptocurrency",
                "blockchain",
                "btc",
                "bitcointrading",
                "investment"
            ]
        },
        {
            "id": "https://pace-makers.github.io/2021/05/21/realtime-console-chat-app/",
            "url": "https://pace-makers.github.io/2021/05/21/realtime-console-chat-app/",
            "title": "Realtime Console Chat App",
            "date_published": "2021-05-21T07:42:24.000Z",
            "content_html": "<p>In this post, We will create and see how easy it is to create your own realtime chat app in console. This chat app is two part, One part is server and second part is Client.</p>\n<p><img src=\"/2021/05/21/realtime-console-chat-app/0.png\" alt=\"THUMBNAIL\"></p>\n<h4 id=\"What-we-need-for-this-tutorial\"><a href=\"#What-we-need-for-this-tutorial\" class=\"headerlink\" title=\"What we need for this tutorial\"></a>What we need for this tutorial</h4><ul>\n<li>NPM and NodeJS installed</li>\n<li><code>socket.io</code> and <code>socket.io-client</code> module</li>\n</ul>\n<h4 id=\"Setting-up-our-project\"><a href=\"#Setting-up-our-project\" class=\"headerlink\" title=\"Setting up our project\"></a>Setting up our project</h4><p>I will be creating my server and client on the same project, If you want to deploy your server code to your hosting provider you need to create seperate project.<br>First, I created a directory named <code>chat-cli</code> and initialized npm project with <code>npm init -y</code>.</p>\n<p>Now I installed the required modules like <code>socket.io</code> and <code>socket.io-client</code> with <code>npm install socket.io socket.io-client</code>.<br>I created two files in our project <code>index.js</code>(contains Client code) and <code>server.js</code>(contains Server code).<br>Now let’s dive into more details.</p>\n<p><img src=\"/2021/05/21/realtime-console-chat-app/1.png\" alt=\"THUMBNAIL HERE\"><br><img src=\"/2021/05/21/realtime-console-chat-app/2.png\" alt=\"THUMBNAIL HERE\"></p>\n<h4 id=\"Creating-a-Socket-io-server\"><a href=\"#Creating-a-Socket-io-server\" class=\"headerlink\" title=\"Creating a Socket.io server\"></a>Creating a Socket.io server</h4><p>We need socket.io server to process all events and send it to our client. So, Let’s create it.</p>\n<p>Open your <code>server.js</code> file and Let’s write some code.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Created a socket.io server</span><br><span class=\"line\">const io = require(&quot;socket.io&quot;)();</span><br><span class=\"line\">// This should be a free port on our server.</span><br><span class=\"line\">const PORT = process.env.PORT || 3000;</span><br><span class=\"line\"></span><br><span class=\"line\">// Created a empty user object, This will store names of our users.</span><br><span class=\"line\">const users = &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">// Listening for a connection event (This event fires when a client is connected to your server)</span><br><span class=\"line\">io.on(&quot;connection&quot;, (socket) =&gt; &#123;</span><br><span class=\"line\">\tconsole.log(&quot;New Connection: &quot; + socket.id);</span><br><span class=\"line\">\t// If user emitted a `new user` event, This callback will be called with his name.</span><br><span class=\"line\">    socket.on(&#x27;new user&#x27;, (name) =&gt; &#123;</span><br><span class=\"line\">        // Storing his name</span><br><span class=\"line\">        users[socket.id] = name;</span><br><span class=\"line\">        // Emitting an event to all users except that user.</span><br><span class=\"line\">        socket.broadcast.emit(&quot;message&quot;, `$&#123;name&#125; joined the chat.`)</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    // Listening for a `message` event.</span><br><span class=\"line\">    socket.on(&#x27;message&#x27;, (text) =&gt; &#123;</span><br><span class=\"line\">        // Emitting an event to all users except that user.</span><br><span class=\"line\">        socket.broadcast.emit(&quot;message&quot;, `$&#123;users[socket.id]&#125;&gt; $&#123;text&#125;`);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// Starting up server on PORT</span><br><span class=\"line\">io.listen(PORT);</span><br></pre></td></tr></table></figure>\n\n<p>Now our server code is finished.<br><img src=\"/2021/05/21/realtime-console-chat-app/3.png\" alt=\"THUMBNAIL HERE\"></p>\n<h4 id=\"Creating-Client-for-Server\"><a href=\"#Creating-Client-for-Server\" class=\"headerlink\" title=\"Creating Client for Server\"></a>Creating Client for Server</h4><p>We need to create client and let it connect to our server.</p>\n<p>Open up <code>index.js</code> file and Let’s write some code.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// IMPORTING `socket.io-client` module</span><br><span class=\"line\">const io = require(&#x27;socket.io-client&#x27;);</span><br><span class=\"line\">// Creating client at the server, you need to pass url of your server where you hosted it.</span><br><span class=\"line\">const socket = io(&quot;http://localhost:3000&quot;);</span><br><span class=\"line\">// IMPORTING readline module to read from console.</span><br><span class=\"line\">const readline = require(&#x27;readline&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">// Creating an interface to get input from our console.</span><br><span class=\"line\">const rl = readline.createInterface(&#123;</span><br><span class=\"line\">  input: process.stdin,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// Getting users name.</span><br><span class=\"line\">console.log(&quot;What is your name?&quot;);</span><br><span class=\"line\">rl.question(&quot;What is your name?&quot;, (text) =&gt; &#123;</span><br><span class=\"line\">    // Sending users name to server</span><br><span class=\"line\">    socket.emit(&#x27;new user&#x27;, text.trim());</span><br><span class=\"line\">    console.log(&quot;You joined the chat&quot;);</span><br><span class=\"line\">    process.stdout.write(&quot;&gt; &quot;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// Listening for event `message` from our server (This will fire when server sends `message` event)</span><br><span class=\"line\">socket.on(&quot;message&quot;, (text) =&gt; &#123;</span><br><span class=\"line\">    // Erasing Last line</span><br><span class=\"line\">    process.stdout.write(&quot;\\r\\x1b[K&quot;)</span><br><span class=\"line\">    console.log(text);</span><br><span class=\"line\">    process.stdout.write(&quot;&gt; &quot;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">// Prompting user to enter message.</span><br><span class=\"line\">rl.prompt();</span><br><span class=\"line\"></span><br><span class=\"line\">// Fires when we input text from user.</span><br><span class=\"line\">rl.on(&#x27;line&#x27;, (text) =&gt; &#123;</span><br><span class=\"line\">    // Sending message to our server.</span><br><span class=\"line\">    socket.emit(&#x27;message&#x27;, text.trim());</span><br><span class=\"line\">    process.stdout.write(&quot;&gt; &quot;);</span><br><span class=\"line\">    rl.prompt();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Our client code is now finished.<br><img src=\"/2021/05/21/realtime-console-chat-app/4.png\" alt=\"THUMBNAIL HERE\"></p>\n<h4 id=\"How-to-run\"><a href=\"#How-to-run\" class=\"headerlink\" title=\"How to run\"></a>How to run</h4><p>First open up three terminals or cmd in your project directory, Start your server first by typing <code>node server.js</code>.</p>\n<p>Now run two clients you want to chat by typing <code>node index.js</code> on two terminals or cmd.</p>\n<p>If you have done everything correctly, You will be able to chat.</p>\n<p><img src=\"/2021/05/21/realtime-console-chat-app/5.png\" alt=\"THUMBNAIL HERE\"><br><img src=\"/2021/05/21/realtime-console-chat-app/6.png\" alt=\"THUMBNAIL HERE\"></p>\n<p><a href=\"https://github.com/Programmer101N/chat-cli-nodejs\">Link to This Project</a></p>\n<p><a href=\"https://wlo.link/@prgmaz\"><strong>Follow me on my socials</strong></a></p>\n",
            "tags": [
                "nodejs",
                "javascript",
                "socket"
            ]
        }
    ]
}