<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://pace-makers.github.io</id>
    <title>Pace Makers • Posts by &#34;socket&#34; tag</title>
    <link href="https://pace-makers.github.io" />
    <updated>2021-05-21T07:42:24.000Z</updated>
    <category term="covaxin" />
    <category term="covishield" />
    <category term="vaccine" />
    <category term="coronavirus" />
    <category term="corona vaccine" />
    <category term="vaccine center" />
    <category term="vaccine india" />
    <category term="pandemic" />
    <category term="bitcoin" />
    <category term="bitcoinmining" />
    <category term="cryptocurrency" />
    <category term="blockchain" />
    <category term="btc" />
    <category term="bitcointrading" />
    <category term="investment" />
    <category term="Gaming" />
    <category term="Indian" />
    <category term="Parents" />
    <category term="Money" />
    <category term="Game" />
    <category term="nodejs" />
    <category term="javascript" />
    <category term="discord" />
    <category term="bot" />
    <category term="commands" />
    <category term="blackfungus" />
    <category term="mucormycosis" />
    <category term="symptoms" />
    <category term="treatment" />
    <category term="deathrate" />
    <category term="prevention" />
    <category term="socket" />
    <entry>
        <id>https://pace-makers.github.io/2021/05/21/realtime-console-chat-app/</id>
        <title>Realtime Console Chat App</title>
        <link rel="alternate" href="https://pace-makers.github.io/2021/05/21/realtime-console-chat-app/"/>
        <content type="html">&lt;p&gt;In this post, We will create and see how easy it is to create your own realtime chat app in console. This chat app is two part, One part is server and second part is Client.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2021/05/21/realtime-console-chat-app/0.png&#34; alt=&#34;THUMBNAIL&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;What-we-need-for-this-tutorial&#34;&gt;&lt;a href=&#34;#What-we-need-for-this-tutorial&#34; class=&#34;headerlink&#34; title=&#34;What we need for this tutorial&#34;&gt;&lt;/a&gt;What we need for this tutorial&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;NPM and NodeJS installed&lt;/li&gt;
&lt;li&gt;&lt;code&gt;socket.io&lt;/code&gt; and &lt;code&gt;socket.io-client&lt;/code&gt; module&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;Setting-up-our-project&#34;&gt;&lt;a href=&#34;#Setting-up-our-project&#34; class=&#34;headerlink&#34; title=&#34;Setting up our project&#34;&gt;&lt;/a&gt;Setting up our project&lt;/h4&gt;&lt;p&gt;I will be creating my server and client on the same project, If you want to deploy your server code to your hosting provider you need to create seperate project.&lt;br&gt;First, I created a directory named &lt;code&gt;chat-cli&lt;/code&gt; and initialized npm project with &lt;code&gt;npm init -y&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now I installed the required modules like &lt;code&gt;socket.io&lt;/code&gt; and &lt;code&gt;socket.io-client&lt;/code&gt; with &lt;code&gt;npm install socket.io socket.io-client&lt;/code&gt;.&lt;br&gt;I created two files in our project &lt;code&gt;index.js&lt;/code&gt;(contains Client code) and &lt;code&gt;server.js&lt;/code&gt;(contains Server code).&lt;br&gt;Now let’s dive into more details.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2021/05/21/realtime-console-chat-app/1.png&#34; alt=&#34;THUMBNAIL HERE&#34;&gt;&lt;br&gt;&lt;img src=&#34;/2021/05/21/realtime-console-chat-app/2.png&#34; alt=&#34;THUMBNAIL HERE&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;Creating-a-Socket-io-server&#34;&gt;&lt;a href=&#34;#Creating-a-Socket-io-server&#34; class=&#34;headerlink&#34; title=&#34;Creating a Socket.io server&#34;&gt;&lt;/a&gt;Creating a Socket.io server&lt;/h4&gt;&lt;p&gt;We need socket.io server to process all events and send it to our client. So, Let’s create it.&lt;/p&gt;
&lt;p&gt;Open your &lt;code&gt;server.js&lt;/code&gt; file and Let’s write some code.&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;// Created a socket.io server&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const io = require(&amp;quot;socket.io&amp;quot;)();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// This should be a free port on our server.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const PORT = process.env.PORT || 3000;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// Created a empty user object, This will store names of our users.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const users = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// Listening for a connection event (This event fires when a client is connected to your server)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.on(&amp;quot;connection&amp;quot;, (socket) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	console.log(&amp;quot;New Connection: &amp;quot; + socket.id);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	// If user emitted a `new user` event, This callback will be called with his name.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    socket.on(&amp;#x27;new user&amp;#x27;, (name) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // Storing his name&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        users[socket.id] = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // Emitting an event to all users except that user.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        socket.broadcast.emit(&amp;quot;message&amp;quot;, `$&amp;#123;name&amp;#125; joined the chat.`)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // Listening for a `message` event.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    socket.on(&amp;#x27;message&amp;#x27;, (text) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // Emitting an event to all users except that user.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        socket.broadcast.emit(&amp;quot;message&amp;quot;, `$&amp;#123;users[socket.id]&amp;#125;&amp;gt; $&amp;#123;text&amp;#125;`);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// Starting up server on PORT&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;io.listen(PORT);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Now our server code is finished.&lt;br&gt;&lt;img src=&#34;/2021/05/21/realtime-console-chat-app/3.png&#34; alt=&#34;THUMBNAIL HERE&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;Creating-Client-for-Server&#34;&gt;&lt;a href=&#34;#Creating-Client-for-Server&#34; class=&#34;headerlink&#34; title=&#34;Creating Client for Server&#34;&gt;&lt;/a&gt;Creating Client for Server&lt;/h4&gt;&lt;p&gt;We need to create client and let it connect to our server.&lt;/p&gt;
&lt;p&gt;Open up &lt;code&gt;index.js&lt;/code&gt; file and Let’s write some code.&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;// IMPORTING `socket.io-client` module&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const io = require(&amp;#x27;socket.io-client&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// Creating client at the server, you need to pass url of your server where you hosted it.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const socket = io(&amp;quot;http://localhost:3000&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// IMPORTING readline module to read from console.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const readline = require(&amp;#x27;readline&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// Creating an interface to get input from our console.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const rl = readline.createInterface(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  input: process.stdin,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// Getting users name.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(&amp;quot;What is your name?&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rl.question(&amp;quot;What is your name?&amp;quot;, (text) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // Sending users name to server&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    socket.emit(&amp;#x27;new user&amp;#x27;, text.trim());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log(&amp;quot;You joined the chat&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    process.stdout.write(&amp;quot;&amp;gt; &amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// Listening for event `message` from our server (This will fire when server sends `message` event)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;socket.on(&amp;quot;message&amp;quot;, (text) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // Erasing Last line&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    process.stdout.write(&amp;quot;\r\x1b[K&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log(text);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    process.stdout.write(&amp;quot;&amp;gt; &amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// Prompting user to enter message.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rl.prompt();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// Fires when we input text from user.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rl.on(&amp;#x27;line&amp;#x27;, (text) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // Sending message to our server.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    socket.emit(&amp;#x27;message&amp;#x27;, text.trim());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    process.stdout.write(&amp;quot;&amp;gt; &amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    rl.prompt();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Our client code is now finished.&lt;br&gt;&lt;img src=&#34;/2021/05/21/realtime-console-chat-app/4.png&#34; alt=&#34;THUMBNAIL HERE&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;How-to-run&#34;&gt;&lt;a href=&#34;#How-to-run&#34; class=&#34;headerlink&#34; title=&#34;How to run&#34;&gt;&lt;/a&gt;How to run&lt;/h4&gt;&lt;p&gt;First open up three terminals or cmd in your project directory, Start your server first by typing &lt;code&gt;node server.js&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now run two clients you want to chat by typing &lt;code&gt;node index.js&lt;/code&gt; on two terminals or cmd.&lt;/p&gt;
&lt;p&gt;If you have done everything correctly, You will be able to chat.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2021/05/21/realtime-console-chat-app/5.png&#34; alt=&#34;THUMBNAIL HERE&#34;&gt;&lt;br&gt;&lt;img src=&#34;/2021/05/21/realtime-console-chat-app/6.png&#34; alt=&#34;THUMBNAIL HERE&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Programmer101N/chat-cli-nodejs&#34;&gt;Link to This Project&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wlo.link/@prgmaz&#34;&gt;&lt;strong&gt;Follow me on my socials&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="nodejs" />
        <category term="javascript" />
        <category term="socket" />
        <updated>2021-05-21T07:42:24.000Z</updated>
    </entry>
</feed>
